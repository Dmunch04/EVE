'scopeName': 'source.eve'
'name': 'Eve'
'fileTypes': ['eve', 'eee']

'patterns': [
  {
    'name': 'meta.section.eve'
    'contentName': 'markup.other.section.eve'
    'begin': '(\\[)'
    'beginCaptures':
      1: 'name': 'support.function.section.eve'        # Makes the bracket blue
      2: 'name': 'punctuation.definition.function.eve'
      3: 'name': 'punctuation.definition.begin.eve'
    'end': '(\\])'
    'endCaptures':
      0: 'punctuation.definition.end.eve'
      1: 'name': 'support.function.section.eve'
    'patterns': [
      {
        'include': '#comment_line'
      },

      {
        'include': '#comment_block'
      },

      {
        'include': '#string'
      },

      {
        'include': '#identifier'
      },

      {
        'include': '#numeric'
      },

      {
        'include': '#var'
      },

      {
        'include': '#equal'
      },

      {
        'include': '#define'
      },

      {
        'include': '#list'
      },

      {
        'include': '#boolans'
      },

      {
        'include': '#definer'
      },

      {
        'include': '#types'
      },

      {
        'include': '#eof'
      },

      {
        'include': '#eof'
      }
    ]
  },

  {
    'include': '#comment_line'
  },

  {
    'include': '#comment_block'
  },

  {
    'include': '#eos'
  },

  {
    'include': '#eof'
  },

  {
    'include': '#section'
  }
]

repository:
  comment_line:
    {
      'match': '@.*$'
      'name': 'comment.line.eve'
    }
  comment_block:
    {
      'begin': '/////'
      'end': '/////'
      'name': 'comment.block.eve'
    }
  string:
    {
      'begin': '\''
      'beginCaptures':
          '0':
              'name': 'punctuation.definition.string.begin.eve'
      'end': '\''
      'endCaptures':
          '0':
              'name': 'punctuation.definition.string.end.eve'
      'name': 'string.quoted.single.eve'
      'patterns': [
          {
              'match': '\''
              'name': 'constant.character.escape.eve'
          }
      ]
    }
  identifier:
    {
      'match': '::'
      'name': 'variable.other.eve'
    }
  numeric:
    {
      'match': '\\b(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))\\b'
      'name': 'constant.numeric.eve'
    }
  var:
    {
      'match': '  (\\?)'
      'name': 'variable.other.eve'
    }
  equal:
    {
      'match': '(\\=)'
      'name': 'variable.other.eve'
    }
  eos:
    {
      'match': '(\\])'
      'name': 'constant.numeric.eve'
    }
  eof:
    {
      'match': '(\\;)'
      'name': 'constant.numeric.eve'
    }
  define:
    {
      'begin': '\\{'
      'end': '\\}'
      'name': 'constant.numeric.eve'
      'patterns': [
        {
          'include': 'text'
        },

        {
          'match': '.'
          'name': 'entity.name.function.eve'
        }
      ]
    }
  text:
    {
      'match': '\\b[a-zA-Z_].*$\\b'
      'name': 'constant.numeric.eve'
    }
  list:
    {
      'begin': '\\:'
      'end': '\\>>'
      'name': 'variable.other.eve'
      'patterns': [
        {
          'include': '#listitem'
        },

        {
          'include': '#comment_line'
        },

        {
          'include': '#comment_block'
        },

        {
          'include': '#identifier'
        },

        {
          'include': '#numeric'
        },

        {
          'include': '#var'
        },

        {
          'include': '#equal'
        },

        {
          'include': '#string'
        },

        {
          'include': '#text'
        },

        {
          'include': '#define'
        },

        {
          'include': '#boolans'
        }
      ]
    }
  listitem:
    {
      'match': '\\-'
      'name': 'punctuation.definition.string.begin.eve'
    }
  boolans:
    {
      'match': '\\b(True|true|False|false)\\b'
      'name': 'keyword.control.eve'
    }
  keywords:
    {
      'match': '\\b(Define|define|Quit|quit)\\b'
      'name': 'entity.name.function.eve'
    }
  types:
    {
      'match': '\\b(None|none|Off|off|On|on)\\b'
      'name': 'entity.name.type.class.eve'
    }
  definer:
    {
      'begin': '\\$'
      'end': '\n'
      'name': 'keyword.control.eve'
      'patterns': [
        {
          'include': '#keywords'
        },

        {
          'include': '#string'
        },

        {
          'include': '#equal'
        }
      ]
    }
